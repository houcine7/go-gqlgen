package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"

	"github.com/houcine7/graphql-server/graph/model"
)

// CreateLink is the resolver for the createLink field.
func (r *mutationResolver) CreateLink(ctx context.Context, input model.NewLink) (*model.Link, error) {
	link := model.Link{
		Title: input.Title,
		Address: input.Address,
		User: &model.User{
			Username: "dummy_user",
		},
	}
	DUMMY_LINKS =append(DUMMY_LINKS,&link);
	return &link,nil
}

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.NewUser) (string, error) {
	panic(fmt.Errorf("not implemented: CreateUser - createUser"))
}

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input model.Login) (string, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
}

// RefreshToken is the resolver for the refreshToken field.
func (r *mutationResolver) RefreshToken(ctx context.Context, input *model.RefreshToken) (string, error) {
	panic(fmt.Errorf("not implemented: RefreshToken - refreshToken"))
}

// Links is the resolver for the links field.
func (r *queryResolver) Links(ctx context.Context, last *int) ([]*model.Link, error) {
	if last ==nil {
		return DUMMY_LINKS, nil
	}else {

		return DUMMY_LINKS[len(DUMMY_LINKS)-*last:],nil
	}

}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
var DUMMY_LINKS []*model.Link = []*model.Link{
	{
		Title:   "some title",
		Address: "http://hassan123.io",
		User: &model.User{
			Username: "dollars",
		},
	},
	{
		Title:   "second",
		Address: "http://rabie.app.io",
		User: &model.User{
			Username: "Elixir",
		},
	},
	{
		Title:   "some title",
		Address: "http://houcine1.test.io",
		User: &model.User{
			Username: "sherlock",
		},
	},
	{
		Title:   "our dummy link",
		Address: "https://houcine7.test.io",
		User: &model.User{
			Username: "houcine7",
		},
	},
}
